[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ilton\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ilton\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.0 (Oracle Corporation Java 1.8.0_221)
[debug]       Load.loadUnit: plugins took 82.8522ms
[debug]       Load.loadUnit: defsScala took 0.3362ms
[debug] [Loading] Scanning directory C:\Users\ilton\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ilton\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.1226 ms
[debug]           Load.resolveProject(global-plugins) took 44.6059ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ilton\.sbt\1.0\plugins, plugins: List(<none>))) took 88.3215ms
[debug] [Loading] Done in C:\Users\ilton\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 108.1013ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2597ms
[debug]     Load.loadUnit(file:/C:/Users/ilton/.sbt/1.0/plugins/, ...) took 198.6544ms
[debug]   Load.apply: load took 366.6085ms
[debug]   Load.apply: resolveProjects took 6.0395ms
[debug]   Load.apply: finalTransforms took 51.9189ms
[debug]   Load.apply: config.delegates took 7.7779ms
[debug]   Load.apply: Def.make(settings)... took 360.3966ms
[debug]   Load.apply: structureIndex took 84.6585ms
[debug]   Load.apply: mkStreams took 1.4757ms
[info] loading global plugins from C:\Users\ilton\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3087.0933ms
[debug]           Load.loadUnit: plugins took 23.5394ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Projects\blockchain\sbt-study\project
[debug]             Load.loadUnit: mkEval took 7.5034ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Projects\blockchain\sbt-study\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4341 ms
[info] loading settings for project sbt-study-build from idea.sbt ...
[debug]               Load.resolveProject(sbt-study-build) took 10.0325ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbt-study-build, base: C:\Projects\blockchain\sbt-study\project, plugins: List(<none>))) took 12.9955ms
[debug] [Loading] Done in C:\Projects\blockchain\sbt-study\project, returning: (sbt-study-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 287.5374ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.0934ms
[debug]         Load.loadUnit(file:/C:/Projects/blockchain/sbt-study/project/, ...) took 316.1544ms
[debug]       Load.apply: load took 317.4906ms
[debug]       Load.apply: resolveProjects took 0.0933ms
[debug]       Load.apply: finalTransforms took 6.4516ms
[debug]       Load.apply: config.delegates took 0.3913ms
[debug]       Load.apply: Def.make(settings)... took 68.3639ms
[debug]       Load.apply: structureIndex took 21.9432ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Projects\blockchain\sbt-study\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1749.2565ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Projects\blockchain\sbt-study
[debug]       Load.loadUnit: mkEval took 0.3523ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Projects\blockchain\sbt-study, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4094 ms
[info] loading settings for project sbt-study from build.sbt ...
[debug]         Load.resolveProject(sbt-study) took 25.6806ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sbt-study, base: C:\Projects\blockchain\sbt-study, plugins: List(<none>))) took 29.2166ms
[debug] [Loading] Done in C:\Projects\blockchain\sbt-study, returning: (sbt-study)
[debug]     Load.loadUnit: loadedProjectsRaw took 102.7506ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.5731ms
[debug]   Load.loadUnit(file:/C:/Projects/blockchain/sbt-study/, ...) took 1856.1189ms
[debug] Load.apply: load took 1857.7496ms
[debug] Load.apply: resolveProjects took 0.1137ms
[debug] Load.apply: finalTransforms took 19.1286ms
[debug] Load.apply: config.delegates took 0.3408ms
[debug] Load.apply: Def.make(settings)... took 74.5501ms
[debug] Load.apply: structureIndex took 20.1431ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to sbt-study (in build file:/C:/Projects/blockchain/sbt-study/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54901 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54901, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to sbt-study (in build file:/C:/Projects/blockchain/sbt-study/)
[debug] > Exec(idea-shell, None, None)
